#textdomain wesnoth-Shadows_of_Deception

# Adds a proxy [advance] entry to a unit's [modifications] node with the specified ID
# Since this is used to enable a previously disabled AMLA, the proxy only has an id key

#define ACTIVATE_AMLA _SUF _AMLA_ID
    [apply_amlas]
        {_SUF}

#ifver WESNOTH_VERSION > 1.13.1
        [advancement]
            id="proxy_amla_" + {_AMLA_ID}
        [/advancement]
#else
        [advance]
            id="proxy_amla_" + {_AMLA_ID}
        [/advance]
#endif
    [/apply_amlas]
#enddef

# Checks whether a unit has gained a specified advancement, and exectute the
# provided actions if it does.

#ifver WESNOTH_VERSION >= 1.13.0

#define APPLY_EXTRA_AMLA_EFFECT _AMLA_ID _ACTIONS
    [event]
        id="post_advance_" + {_AMLA_ID}
        name=post advance
        first_time_only=yes
        [filter]
            side=1
            role=hero
        [/filter]
        [filter_condition]
            [has_amla]
                [filter]
                    id=$unit.id
                [/filter]
                advancement={_AMLA_ID}
            [/has_amla]

            {VARIABLE_BOOLEAN_NOT_EQUALS unit.variables.amla_{_AMLA_ID}_acquired yes}
        [/filter_condition]

        {VARIABLE unit.variables.amla_{_AMLA_ID}_acquired yes}

        # Unstore unit before executing actions
        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]

        {_ACTIONS}

        # Remove this event
        [event]
            id="post_advance_" + {_AMLA_ID}
            remove=yes
        [/event]

        {LOG_NX_DBG ("Additional effects applied for AMLA '" + {_AMLA_ID} + "'")}
    [/event]
#enddef

#else

#define APPLY_EXTRA_AMLA_EFFECT _UNIT_ID _AMLA_ID _ACTIONS
    [event]
        id="post_advance_" + {_AMLA_ID}
        name=post advance
        first_time_only=no
        [filter]
            side=1
            id={_UNIT_ID}
        [/filter]
        [filter_condition]
            {VARIABLE_BOOLEAN_NOT_EQUALS unit.variables.amla_{_AMLA_ID}_acquired yes}
        [/filter_condition]

        {FOREACH unit.modifications.advance i}
            [if]
                {VARIABLE_LEXICAL_EQUALS unit.modifications.advance[$i].id {_AMLA_ID}}
                [then]
                    {VARIABLE unit.variables.amla_{_AMLA_ID}_acquired yes}

                    # Unstore unit before executing actions
                    [unstore_unit]
                        variable=unit
                        find_vacant=no
                    [/unstore_unit]

                    {_ACTIONS}

                    # Remove this event
                    [event]
                        id="post_advance_" + {_AMLA_ID}
                        remove=yes
                    [/event]

                    {LOG_NX_DBG ("Additional effects applied for AMLA '" + {_AMLA_ID} + "'")}
                [/then]
            [/if]
        {NEXT i}
    [/event]
#enddef

#endif

#define AMLA_DEFAULT_ICON
    [+advancement]
        image="icons/amla-default.png"
    [/advancement]
#enddef
